(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{431:function(s,t,a){"use strict";a.r(t);var n=a(2),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("ImageView",{attrs:{size:["100%"],src:"/images/gaoda/202308262055023.jpg"}}),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("前言:"),t("br"),s._v("\n现代浏览器是"),t("strong",[s._v("多进程 多线程")]),s._v("的，每个标签页或者扩展都是一个单独的浏览器进程 (后续浏览器可能会优化，更改为同一域名下只会存在一个浏览器进程)")])]),t("h3",{attrs:{id:"_1-1-进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-进程"}},[s._v("#")]),s._v(" 1.1  "),t("strong",[s._v("进程")])]),s._v(" "),t("p",[s._v("进程是系统分配资源的基本单位，是一个程序运行的实例，拥有自己的内存和资源，不同进程之间相互独立，互不干扰。可以通过一些通信机制相互通信。"),t("br"),s._v("\n浏览器单个标签页都是一个独立的浏览器进程，这样可以提升浏览器稳定性，一个标签页挂掉后不影响其他标签页的正常运行。")]),s._v(" "),t("h3",{attrs:{id:"_1-2-线程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-线程"}},[s._v("#")]),s._v(" 1.2 "),t("strong",[s._v("线程")])]),s._v(" "),t("p",[s._v("线程是cpu调度的最小单位,线程是依附在进程上的，一个线程通常只做一件事，一个进程可以有多个线程，但至少有一个主线程。")]),s._v(" "),t("h3",{attrs:{id:"_1-3-chrome浏览器包括的进程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-chrome浏览器包括的进程"}},[s._v("#")]),s._v(" 1.3 "),t("strong",[s._v("Chrome浏览器包括的进程")])]),s._v(" "),t("ol",[t("li",[t("strong",[s._v("浏览器进程(主进程，只有一个)")])])]),s._v(" "),t("p",[s._v("负责管理界面(书签栏，地址栏，前进返回按钮等等)，响应用户请求，文件访问，协调子进程等等(渲染进程，插件进程，Gpu进程等)")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[t("strong",[s._v("插件进程")])])]),s._v(" "),t("p",[s._v("负责插件的运行，每个扩展插件运行时都会产生一个进程，保证插件奔溃不会影响到页面")]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[t("strong",[s._v("Gpu进程")])])]),s._v(" "),t("p",[s._v("负责浏览器界面渲染。3D渲染")]),s._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[t("strong",[s._v("网络进程")])])]),s._v(" "),t("p",[s._v("处理网络请求，发送到服务器并处理响应。也负责处理cookie，https加密，缓存，浏览器安全机制(SSL/TLS 加密、证书验证、XSS 攻击和 CSRF 攻击等)")]),s._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[t("strong",[s._v("实用程序进程")])])]),s._v(" "),t("p",[s._v("运行在浏览器后台的一个进程，负责浏览器的一些特性，打印，截屏，下载，文件系统，设备管理，内部通信；")]),s._v(" "),t("ol",{attrs:{start:"6"}},[t("li",[t("strong",[s._v("渲染进程(重点，前端必考题)")])])]),s._v(" "),t("p",[s._v("默认情况下标签页都会有一个自己的渲染进程,负责加载脚本资源，将html,css，js转换为网页，事件处理等")]),s._v(" "),t("p",[s._v("当浏览器性能紧缺时会做一些优化，相同网站会共用一个渲染线程")]),s._v(" "),t("h3",{attrs:{id:"_2-渲染进程-浏览器内核"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-渲染进程-浏览器内核"}},[s._v("#")]),s._v(" 2 "),t("strong",[s._v("渲染进程(浏览器内核)")])]),s._v(" "),t("p",[s._v("对于前端来说渲染进程几乎穿插整个过程，页面渲染，js执行，事件循环。下面是渲染进程的中的线程，每个线程都有自己的职责。"),t("br"),s._v("\n当渲染进程开启后，也会随之开启一个渲染主线程，负责解析html,css,生成渲染树，布局，绘制，执行js等。下面的都是进程开启后的一些常驻线程")]),s._v(" "),t("p",[t("strong",[s._v("2.1 GUI渲染线程")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[t("strong",[s._v("GUI渲染线程与js引擎线程是互斥的")])])]),t("p",[s._v("解析html,css,生成渲染树，布局，绘制都是这个线程去做")]),s._v(" "),t("p",[t("strong",[s._v("2.2 js引擎线程")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[t("strong",[s._v("再次小声哔哔，GUI渲染线程与js引擎线程是互斥的，防止js在渲染时操作DOM冲突，导致渲染结果不可预期")])])]),t("p",[s._v("负责解析和处理 js 脚本程序，会有一个执行栈，代码都将在执行栈里运行。"),t("br"),s._v("\n执行栈中任务执行完后会读取任务队列，将队列中第一个(队列遵循先进先出)可运行的任务加入执行栈执行")]),s._v(" "),t("p",[t("strong",[s._v("2.3 事件触发线程")]),t("br"),s._v("\n负责管理任务队列，控制事件循环，将满足条件的异步回调任务(ajax，定时器，事件处理函数)加入任务队列，等待js引擎线程取出执行")]),s._v(" "),t("p",[t("strong",[s._v("2.4 定时器线程")]),t("br"),s._v("\nsetTomeout和setInterVal所在的线程，"),t("br"),s._v("\n当js执行这两个API的时候并不是有js引擎来计时的，js引擎是单线程，如果发生了阻塞就会影响计时，便会交给该线程来计时，记时完毕后会"),t("strong",[s._v("通知事件触发线程")]),s._v("将回调加入对应任务队列队尾，等待js引擎取出处理。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当js执行到这里时，js引擎线程会通知定时器线程计时，js引擎会继续执行后面的代码   ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 计时结束后定时器线程通知事件触发线程将其回调加入任务队列")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"settimeout"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("blockquote",[t("p",[s._v("当定时器延时设置为0时，浏览器环境会默认为4ms，node环境为1ms")])]),s._v(" "),t("p",[t("strong",[s._v("2.5 异步http请求线程")])]),s._v(" "),t("p",[s._v("负责处理通过XMLHttpRequest对象发出Ajax请求。"),t("br"),s._v("\n异步http请求是XMLHttpRequest连接后浏览器新开的一个线程，之前还说到有一个网络进程用于处理所有的网络请求，同样异步http请求线程要发送一个Ajax请求时也会将该请求发送给网络进程，由网络进程与服务器通信，当网络进程收到服务器响应后会将响应结果交给异步http线程，如果有回调则该线程会将回调加入任务队列队尾。")]),s._v(" "),t("p",[t("strong",[s._v("渲染流程")]),t("br"),s._v("\n就是浏览器将html，css，js转化为屏幕上图像的步骤，这个过程包含了浏览器对DOM(文档对象模型),CSSOM(css对象模型),渲染树，布局，绘制等的构建与操作，也叫"),t("strong",[s._v("关键渲染路径")]),t("br"),s._v("\n当在地址栏输入url,会由网络进程发起请求拿到html文件，并作为一个渲染任务加入任务队列，之后便由"),t("strong",[s._v("事件循环")]),s._v("的机制由主线程取出并执行。")]),s._v(" "),t("ol",[t("li",[s._v("解析html，css，生成DOM，CSSOM树。解析前会开启一个预解析的线程，提前下载html中的外部css，js文件。")])]),s._v(" "),t("p",[t("em",[s._v("css会阻塞js")]),s._v(":")]),s._v(" "),t("blockquote",[t("p",[s._v("主线程在解析html生成DOM树的过程中如果遇到了link或style标签时会开始构建CSSOM树，CSSOM树的构建不会影响到DOM树的构建。但是js是可以直接操作CSS，DOM的，都是对DOM,CSSOM树的修改，所以当js中遇到修改某个样式时就会等到css被加载完成时才会继续执行。")])]),s._v(" "),t("p",[t("em",[s._v("js会阻塞DOM树构建")]),s._v("：")]),s._v(" "),t("blockquote",[t("p",[s._v("主线程在解析html生成DOM树的过程中如果遇到了script标签会暂停解析，将控制权交由js引擎线程，同样因为js是可以直接操作界面的，所以 DOM 树的生成会暂停，待js执行完成再交给渲染线程。")])]),s._v(" "),t("p",[t("strong",[s._v("总结")])]),s._v(" "),t("blockquote",[t("p",[s._v("由于js可以直接操作影响CSS，DOM。对于css，如果link或style标签后面有js代码(script标签)，则会等待css构建完成才会继续执行js，而在JS完全执行完前会停止解析html(js引擎线程占用着主线程)，等待js的执行后才会继续(主线程控制权交由渲染线程)，所以这样来说css也会间接的影响DOM树的构建，所以我们通常都会把script标签写在文档最底部(放顶部js代码运行时DOM树还没有构建，所以也拿不到节点信息)，这样就不会阻塞GUI渲染线程去解析css，html，这也是为什么会设计JS引擎线程会与GUI渲染线程互斥的原因。")])]),s._v(" "),t("p",[t("strong",[s._v("特殊情况(defer&&async)")])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("上边的说的script都是不包含defer和async属性的，如果script标签上有这两个属性，则js的下载不会影响DOM的构建。")]),s._v(" "),t("p",[t("em",[s._v("defer:")]),s._v(" js脚本下载完成后等待DOM的构建，在DOM构建完成后会执行；"),t("br"),s._v(" "),t("em",[s._v("async:")]),s._v(" js脚本下载完成后直接执行，抢占主线程，这时html会停止解析")])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[s._v("当DOM，CSSOM树都构建完成会进行样式计算，构建渲染树。主线程会遍历DOM树，计算出每个节点的最终样式，在这个过程中一些预设值都会变成绝对值，em,rem变为px，red变成rgb(255,0,0)。当这一步完成就会得到带有样式的DOM树(渲染树)，它包含所有关于可见DOM内容的信息以及不同节点所需的所有CSSOM 信息。"),t("br"),s._v("\nDOM树和最终生成的带有样式DOM树(渲染树)是可能并不是一样的，例如display:none;的样式的元素不会出现在渲染树里。")])]),s._v(" "),t("li",[t("p",[s._v("布局(回流)，依旧会遍历DOM树的每个节点，计算每个节点的几何信息(宽高，相对父级位置)，这个阶段会考虑到DOM和CSSOM的样式来生成布局树。"),t("br"),s._v("\n某些情况下DOM树与布局树也并不是一一对应，页面最终呈现的是布局树，例如display:none；的元素没有几何信息，此时DOM树里存在，但布局树里不存在，比如伪元素选择器，DOM树里是没有该伪元素的，但是它有实际的几何信息，会在布局树里呈现。")])]),s._v(" "),t("li",[t("p",[s._v("分层。主线程会使用一套策略来对整个布局树进行分层，这样做的原因是未来更新将只会在某一层进行，节省性能，提升效率。")])]),s._v(" "),t("li",[t("p",[s._v("绘制。这个绘制并不是会将内容绘制到屏幕上，而是主线程会为每一层单独生成一个 "),t("em",[s._v("指令")]),s._v(" ，这个指令只要用于描述该层的内容应该如何画出来。当这一步完成后，渲染主线程的工作将到此为止，剩余的工作将交给"),t("strong",[s._v("合成线程")]),s._v("来完。")])])]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("合成线程是渲染线程中的一个子集，负责将页面的图层合成为最终的显示帧，这些图层可以包括DOM元素、CSS、Canvas元素等")])]),t("ol",{attrs:{start:"6"}},[t("li",[t("p",[s._v("分块。这一步合成线程会将每一层进行分块，划分为更小的区域。")])]),s._v(" "),t("li",[t("p",[s._v("光栅化。光栅化是将上一步划分的块变成"),t("strong",[s._v("位图(栅格图像)")]),s._v("，就是将每一块的图像转换为栅格图像，也就是位图，由一个个像素点组成，每个像素代表图像的一小部分，也就是一组颜色值。"),t("br"),s._v("\n这一阶段合成线程会将块交给GPU进程，GPU会开启多个线程以极快的速度完成光栅化生传位图，并且优先处理视口区域的块。完成后交还给合成线程")])]),s._v(" "),t("li",[t("p",[s._v("画。经过上边一系列的操作，这一步才会最终呈现到屏幕上。合成线程拿到每个块的位图后，计算出每个位图在屏幕上的位置，会为每个位图生成"),t("strong",[s._v("指引信息(quad)")]),s._v("，指引信息会标识出位图应该画到屏幕的那个位置，以及会考虑到缩放，旋转，偏移等transform操作。之所以说transform相对于定位效率好的原因也是因为transform这些操作发生在渲染流程的最后一步(合成线程)，而后者发生在布局阶段和绘制阶段会导致重排重绘(渲染线程)，合成线程不会影响渲染线程和js引擎线程的执行"),t("br"),s._v("\n合成线程会将"),t("strong",[s._v("指引信息")]),s._v("交给GPU进程，由GPU完成最终的呈现。")])])]),s._v(" "),t("h3",{attrs:{id:"_3-eventloop-事件循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-eventloop-事件循环"}},[s._v("#")]),s._v(" 3 "),t("strong",[s._v("EventLoop(事件循环)")])]),s._v(" "),t("p",[s._v("事件循环可以说是浏览器运行调度任务的一种工作方式，犹如道路红绿灯。浏览器协调任务(事件任务，用户交互，脚本，渲染，网络任务)必须按照这一系列规则来。")]),s._v(" "),t("p",[s._v("我们知道浏览器渲染进程启动后会开启一个主线程，随着主线程的开启，浏览器会启动一个不会结束循环，每一次循环都会去检查任务队列(也可以叫消息队列，前边的事件触发线程就是管理任务队列的)里有没有需要执行的任务，有着取出第一个任务执行，没有就会进入休眠状态。其他线程都可以往这个队列的队尾添加任务，如果此时主线程是休眠状态则会被唤醒。")]),s._v(" "),t("p",[s._v("js是单线程的语言(只有js引擎线程可以执行js代码)，执行代码是会按照同步代码的顺序放入执行栈依次执行，但是如果执行过程中遇见需要等待，无法立即执行的任务时，那么整个程序可能都会被阻塞，导致卡顿，界面无响应等等。浏览器会使用"),t("strong",[s._v("异步任务")]),s._v("的方式来解决整个问题。如果执行代码遇见对应的异步任务，会被交给对应的线程来处理(定时器交给定时器线程，http请求交给http请求线程)，达到某个条件后再将这个异步回调包装成任务加入任务队列，由事件循环的机制在后续被拿出执行，之后继续后续的代码的执行。由此也可以知道js的异步操作是需要其他线程协助的，并不是有js引擎全部揽入。")]),s._v(" "),t("p",[s._v("而异步任务分为微任务和宏任务，队列中同时存在微任务和宏任务时优先清空微任务。")]),s._v(" "),t("h4",{attrs:{id:"微任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微任务"}},[s._v("#")]),s._v(" "),t("strong",[s._v("微任务")])]),s._v(" "),t("p",[s._v("微任务是优先级较高的任务，事件循环的过程中执行栈的同步代码(这里的同步代码也可理解为一个被加入执行栈的宏任务)执行完后会优先检查微任务队列是否为空，不为空则将其清空。"),t("br"),s._v("\n微任务通常是一个细微的异步任务，会在更新渲染前执行。"),t("strong",[s._v("微任务执行过程中产生的微任务也会加入队列，在本次循环中执行")]),t("br"),s._v("\n微任务队列只有一个"),t("br"),s._v("\n比如："),t("br"),s._v("\nPromise.then/catch/finally"),t("br"),s._v("\nMutationObserver"),t("br"),s._v("\nprocess.nextTick（在 Node.js 环境中）")]),s._v(" "),t("h4",{attrs:{id:"宏任务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#宏任务"}},[s._v("#")]),s._v(" "),t("strong",[s._v("宏任务")])]),s._v(" "),t("p",[s._v("包括定时器任务，DOM事件任务，事件监听，请求等等，都称为宏任务。"),t("br"),s._v("\n根据现在的规范已经没有宏任务这个说法了，或者说就当宏任务只是一个称呼，根据 W3C 的最新解释:")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("ol",[t("li",[s._v("每个任务都有一个任务类型,同一个类型的任务必须在一个队列,不同类型的任务可以分属于不同的队列。在一次事件循环当中,浏览器可以根据实际情况从不同的队列中取出任务执行;")]),s._v(" "),t("li",[s._v("浏览器必须准备好一个微任务队列,微队列中的任务优先所有其他任务执行;")])])]),t("p",[s._v("setTimeout/setInterVal，MessageChannel，addEventListener，script标签"),t("br"),s._v("\n这里了解一下为什么script标签会被归结为宏任务，因为script标签里的代码要进行一系列的操作才能执行。"),t("br"),s._v(" "),t("em",[s._v("解析/编译")]),s._v("，解析器将一行一行读取代码进行解析转换为浏览器可执行的形式，这是个比较耗时和消耗资源的过程。"),t("br"),s._v(" "),t("em",[s._v("可能会操作DOM")]),s._v("，由于js的执行可能会修改当前页面的结构和样式,浏览器必须等待脚本执行完毕后再进行页面的渲染。也就是说,当浏览器执行 script 标签时,它会阻塞页面的渲染(停止DOM解析),直到脚本执行完毕才会继续渲染。"),t("br"),s._v(" "),t("em",[s._v("网络请求")]),s._v("，在 script 标签中,可以使用外部的 JavaScript 文件引用，例如 "),t("code",[s._v('<script src="example.js"><\/script>')]),s._v("。当遇到这样的情况时,它会发起一个网络请求去下载该文件,并等待文件下载完成后再执行。网络请求通常是一个比较耗时的操作(本身也是宏任务)，因此将其作为宏任务可以确保脚本的执行按照正确的顺序进行(事件循环机制);")]),s._v(" "),t("h4",{attrs:{id:"任务没有优先级-任务队列-消息队列-有优先级"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#任务没有优先级-任务队列-消息队列-有优先级"}},[s._v("#")]),s._v(" "),t("strong",[s._v("任务没有优先级，任务队列(消息队列)有优先级")])]),s._v(" "),t("p",[s._v("我们知道每个任务都有一个任务类型,同一个类型的任务必须在一个队列,就可以分属于不同的队列，这些队列有优先级，并且至少包含以下队列:"),t("br"),s._v(" "),t("strong",[s._v("延时队列")]),s._v("： 优先级中，存放计时器到达后产生的回调任务"),t("br"),s._v(" "),t("strong",[s._v("交互队列")]),s._v("： 优先级，存放用户操作后产生的事件处理任务(交互，鼠标操作)"),t("br"),s._v(" "),t("strong",[s._v("微队列")]),s._v("： 优先级最高，存放需要最快执行的任务")]),s._v(" "),t("h4",{attrs:{id:"页面更新渲染发生在什么时候-是否每次事件循环都会更新页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#页面更新渲染发生在什么时候-是否每次事件循环都会更新页面"}},[s._v("#")]),s._v(" "),t("strong",[s._v("页面更新渲染发生在什么时候？是否每次事件循环都会更新页面？")])]),s._v(" "),t("p",[s._v("首先更新渲染阶段是会在下次宏任务前，本次微任务结束后将主线程控制权交给渲染线程进行更新渲染；")]),s._v(" "),t("p",[s._v("微任务结束后会开始更新渲染阶段，而更新渲染不是每一次循环都会执行，会根据屏幕刷新率、页面性能、页面是否在后台运行来共同决定，通常来说这个渲染间隔是根据帧率来的，一般来说是60hz,16ms(1000/60)刷新一次，也因为浏览器更新渲染会有一个渲染队列，会将更新任务放入里面，进行优化合并更新，达到一定时间或者一定数量会才会执行更新，所以浏览器根据一系列条件判断后可能会跳过本次更新，将其放入渲染队列放在下次事件循环更新，也就是会多次渲染任务会合并更新；")]),s._v(" "),t("p",[s._v("可以瞅瞅我从别处盗来的图"),t("br"),s._v(" "),t("ImageView",{attrs:{size:["auto","auto"],src:"/images/js/EventLoop.jpg"}})],1),s._v(" "),t("h4",{attrs:{id:"微任务可能会阻塞渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#微任务可能会阻塞渲染"}},[s._v("#")]),s._v(" "),t("strong",[s._v("微任务可能会阻塞渲染？")])]),s._v(" "),t("p",[s._v("微任务有这一特性: "),t("strong",[s._v("本次微任务执行过程中产生的微任务也会加入队列在本次循环执行")]),s._v("；")]),s._v(" "),t("p",[s._v("浏览器的更新渲染穿插在每次事件循环中,但不是每次都会重新渲染页面；")]),s._v(" "),t("p",[s._v("宏任务执行完成后js引擎线程会检查微队列有没有需要执行的任务，没有就会将主线程的控制器交给GUI渲染线程，如果有就清空微任务列队，再把控制权交给渲染线程，然后由渲染线程更新渲染页面(如果需要更新渲染的话，这里浏览器会根据一系列情况来判断本次循环需不需要更新页面)，但是如果微任务队列执行过程中又产生众多微任务，根据微任务特性依旧会拿出执行，一直到清空，这里就等于主线程的控制权无法交到渲染线程手里，就迟迟不会去更新页面。这个时候微任务里的微任务和类似同步代码一样，会一次性将其执行完。"),t("br"),s._v("\n例：")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("查看代码")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("document"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("body"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("style"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("background "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),s._v("\nPromise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 模拟耗时任务")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])])]),s._v(" "),t("p",[s._v("上面代码在控制台执行，页面背景变为红色前会有一小段时间是空白，也就是微任务在执行过程中又产生一系列微任务，阻塞了渲染。")]),s._v(" "),t("h4",{attrs:{id:"requestanimationframe-requestidlecallback"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#requestanimationframe-requestidlecallback"}},[s._v("#")]),s._v(" "),t("strong",[s._v("requestAnimationFrame ，requestIdleCallback")])]),s._v(" "),t("ol",[t("li",[s._v("requestAnimationFrame：帧动画回调，官方推荐用来做动画的api，该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行，等同于在浏览器渲染前给你一个机会去更改DOM;requestAnimationFrame()是一次性的，想要后续继续执行需要自调用；")])]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("查看")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("an")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("requestAnimationFrame")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("time")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// time 开始执行回调函数的时刻。")]),s._v("\n            console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("an")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("an")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("requestIdleCallback： 这个函数将在浏览器空闲时期被调用。开发者能够在主事件循环上执行后台和低优先级工作，而不会影响延迟关键事件，如动画和输入响应。函数一般会按先进先调用的顺序执行，然而，如果回调函数指定了执行超时时间timeout，则有可能为了在超时前执行函数而打乱执行顺序。")])]),s._v(" "),t("p",[s._v("上面MDN 对它的描述，如果在渲染后如果浏览器还有空闲时间时调用，可以用来执行一些优先级较低的工作，不过如果浏览器没有空闲时间，那么他可能会隔很长一段时间才会执行一次，所以提供了第二个参数兜底，保障它可以在一段时间后加入队列调用;")]),s._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[s._v("查看")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("requestIdleCallback")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("IdleDeadline")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 回调拥有一个参数 IdleDeadline  ")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// IdleDeadline.didTimeout  是否超时")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// IdleDeadline.timeRemaining 空闲时间")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 500ms 后还没有调用，将加入任务队列排队执行")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("timeout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("p",[s._v("总结：requestAnimationFrame 在渲染前触发，requestIdleCallback在渲染后有空闲时间时触发；")]),s._v(" "),t("h4",{attrs:{id:"总结一次事件循环流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结一次事件循环流程"}},[s._v("#")]),s._v(" "),t("strong",[s._v("总结一次事件循环流程")])]),s._v(" "),t("ol",[t("li",[s._v("任务队列初始状态时是没有微任务的，所以取出一个宏任务执行(例如第一次执行script标签代码(宏任务)，后续任务都是基于script产生)。")]),s._v(" "),t("li",[s._v("宏任务执行完后检查微任务队列，清空队列，如果在微任务的执行中又加入了新的微任务，也会在这一步一起执行")]),s._v(" "),t("li",[s._v("清空微任务队列后控制器移交GUI渲染线程，进入更新渲染阶段，而更新渲染不是每一次循环都会执行，会根据屏幕刷新率、页面性能、页面是否在后台运行来共同决定，通常来说这个渲染间隔是固定的，一般来说是60hz,16ms(1000/60)刷新一次。")])]),s._v(" "),t("p",[t("em",[s._v("----对于下面的操作，仅会在需要更新渲染才会触发，如果不需要渲染则会加入下一次循环----")]),t("br"),s._v("\n4. 如果窗口的大小发生了变化或者页面发生了滚动，执行监听的 resize或者scroll 方法。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[s._v("对于resize 和 scroll，并不是到了这一步才去执行滚动和缩放，浏览器会立刻帮你滚动视图，然后会保存一个 pending scroll event targets(待处理的滚动事件目标)，等到事件循环执行到 scroll 这一步，去派发一个事件到对应的目标上，驱动它去执行监听的回调函数而已。resize也是同理。")])]),t("ol",{attrs:{start:"5"}},[t("li",[s._v("执行帧动画回调，也就是 requestAnimationFrame 的回调。")]),s._v(" "),t("li",[s._v("执行 IntersectionObserver 的回调。")]),s._v(" "),t("li",[s._v("重新渲染绘制用户界面。")]),s._v(" "),t("li",[s._v("判断是否要执行 requestIdleCallback 的回调函数，如果你一定要它在某个时间内执行，使用 timeout参数。")])])],1)}),[],!1,null,null,null);t.default=r.exports}}]);